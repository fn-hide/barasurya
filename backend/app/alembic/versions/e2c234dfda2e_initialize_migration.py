"""Initialize migration

Revision ID: e2c234dfda2e
Revises:
Create Date: 2025-05-08 05:41:02.898449

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'e2c234dfda2e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('customer_type',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_customer_type_owner_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_customer_type'))
    )
    op.create_table('item_category',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_item_category_owner_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_item_category'))
    )
    op.create_table('item_unit',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_item_unit_owner_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_item_unit'))
    )
    op.create_table('store',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_store_owner_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_store'))
    )
    op.create_table('supplier',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_supplier_owner_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_supplier'))
    )
    op.create_table('customer',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('customer_type_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['customer_type_id'], ['customer_type.id'], name=op.f('fk_customer_customer_type_id_customer_type'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_customer_owner_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_customer'))
    )
    op.create_table('item',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('price_purchase', sa.Float(), nullable=True),
    sa.Column('price_sell', sa.Float(), nullable=True),
    sa.Column('stock', sa.Integer(), nullable=False),
    sa.Column('stock_minimum', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('item_category_id', sa.Uuid(), nullable=False),
    sa.Column('item_unit_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['item_category_id'], ['item_category.id'], name=op.f('fk_item_item_category_id_item_category'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['item_unit_id'], ['item_unit.id'], name=op.f('fk_item_item_unit_id_item_unit'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_item_owner_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_item'))
    )
    op.create_table('purchase',
    sa.Column('date_purchase', sa.DateTime(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('supplier_id', sa.Uuid(), nullable=False),
    sa.Column('store_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_purchase_owner_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], name=op.f('fk_purchase_store_id_store'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['supplier_id'], ['supplier.id'], name=op.f('fk_purchase_supplier_id_supplier'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchase'))
    )
    op.create_table('purchase_item',
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('purchase_id', sa.Uuid(), nullable=False),
    sa.Column('item_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], name=op.f('fk_purchase_item_item_id_item'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_purchase_item_owner_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchase.id'], name=op.f('fk_purchase_item_purchase_id_purchase'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchase_item'))
    )
    op.create_table('sale',
    sa.Column('date_sol', sa.DateTime(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('customer_id', sa.Uuid(), nullable=False),
    sa.Column('store_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], name=op.f('fk_sale_customer_id_customer'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_sale_owner_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], name=op.f('fk_sale_store_id_store'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sale'))
    )
    op.create_table('sale_item',
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('sale_id', sa.Uuid(), nullable=False),
    sa.Column('item_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], name=op.f('fk_sale_item_item_id_item'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_sale_item_owner_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sale_id'], ['sale.id'], name=op.f('fk_sale_item_sale_id_sale'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sale_item'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sale_item')
    op.drop_table('sale')
    op.drop_table('purchase_item')
    op.drop_table('purchase')
    op.drop_table('item')
    op.drop_table('customer')
    op.drop_table('supplier')
    op.drop_table('store')
    op.drop_table('item_unit')
    op.drop_table('item_category')
    op.drop_table('customer_type')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
